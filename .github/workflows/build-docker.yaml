
name: Build Image

# Controls when the workflow will run
on:
  push:
    branches-ignore:
      - main
    paths:
      - Dockerfile

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      tag_name:
        description: 'Tag Name'
        required: false
        default: 'latest'

env:
  LOCAL_NAME  : 'local-image'
  LOCAL_SHA   : "${{ github.sha }}"
  TAG_NAME    : "${{ github.event.inputs.tag_name || 'latest' }}"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  process:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Build Docker Image
        run: |
          ### Define Variables
          LOCAL_IMAGE="${LOCAL_NAME}:${LOCAL_SHA}"
          ###
          docker build --no-cache --tag "${LOCAL_IMAGE}" --file 'Dockerfile' .
      
      - name: Test
        env:
          FOLDER_TEST: 'Test/'
        run: |
          ### Define Variables
          LOCAL_IMAGE="${LOCAL_NAME}:${LOCAL_SHA}"
          ###
          if [ -d "${FOLDER_TEST}" ]
          then
            export TEST_IMAGE="${LOCAL_IMAGE}"
            ls ${FOLDER_TEST%/}/*.sh |
              while read -r bfile
              do
                echo "running: ${bfile}"
                bash "${bfile}"
              done
          fi
      
      - name: Publish
        env:
          NAMESPACE: ${{ secrets.DOCKER_NAMESPACE }}
          PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
        run: |
          ### Define Variables
          LOCAL_IMAGE="${LOCAL_NAME}:${LOCAL_SHA}"
          BRANCH="${GITHUB_REF##*/}"
          REPOSITORY_NAME="${BRANCH}"
          IMAGE_NAME="${NAMESPACE}/${REPOSITORY_NAME}:${TAG_NAME}"
          ###
          docker tag "${LOCAL_IMAGE}" ${IMAGE_NAME}
          USERNAME="${NAMESPACE##*/}"
          echo "${PASSWORD}" | docker login --username "${USERNAME}" --password-stdin
          docker push "${IMAGE_NAME}"
          docker logout
      
      - name: Clean
        env:
          NAMESPACE: ${{ secrets.DOCKER_NAMESPACE }}
        run: |
          ### Define Variables
          LOCAL_IMAGE="${LOCAL_NAME}:${LOCAL_SHA}"
          BRANCH="${GITHUB_REF##*/}"
          REPOSITORY_NAME="${BRANCH}"
          IMAGE_NAME="${NAMESPACE}/${REPOSITORY_NAME}:${TAG_NAME}"
          ###
          docker rmi --force "${LOCAL_IMAGE}"
          docker rmi --force "${IMAGE_NAME}"
          echo "${{ github.ref_name }}"
